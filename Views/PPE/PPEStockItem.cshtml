@model IEnumerable<FIFO_Infineon.Models.StockItem>
@{
    ViewData["Title"] = "Item Stock - PPE";
}

<div class="d-flex justify-content-between align-items-center mb-3">
    <h1 class="display-4">@ViewData["Title"]</h1>
    <div>
        <a asp-action="Create" class="btn btn-primary me-2">
            <i class="fas fa-plus-circle"></i> Add Item
        </a>
    </div>
</div>

<p class="text-muted">
    The following is a list of stock items in the PPE category. Stock is sorted by date received
</p>

<table class="table table-striped table-hover">
    <thead class="table-dark">
        <tr>
            <th>Item ID</th>
            <th>Item Name</th>
            <th>Description Item</th>
            <th>Quantity</th>
            <th>Entry Date</th>
            <th>Action</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>
                    @item.MasterItemID
                </td>
                <td>
                    @if (item.MasterItem != null)
                    {
                        @item.MasterItem.ItemName
                    }
                </td>
                <td>
                    @if (item.MasterItem != null)
                    {
                        @item.MasterItem.ItemDescription
                    }
                </td>
                <td>
                    @item.Quantity
                </td>
                <td>
                    @item.EntryDate.ToString("g")
                </td>
                <td>
                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-primary">Edit</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                </td>
            </tr>
        }
    </tbody>
</table>
<div class="mt-5">
    <h1 class="display-4">Stock Chart - PPE</h1>
    <canvas id="stockChart"></canvas>
    </div>

    @section Scripts {
        <script>
            // Ambil data dari ViewBag
            var labels = @Html.Raw(Json.Serialize(ViewBag.ChartLabels));
            var data = @Html.Raw(Json.Serialize(ViewBag.ChartData));

            var ctx = document.getElementById('stockChart').getContext('2d');
            var stockChart = new Chart(ctx, {
                type: 'bar', // Anda bisa ganti menjadi 'line' atau 'pie'
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Total Quantity',
                        data: data,
                        backgroundColor: 'rgba(10, 130, 118, 0.5)',
                        borderColor: 'rgba(10, 130, 118, 1)',
                        borderWidth: 1
                    }]
                },
                options: {
                    scales: {
                        y: {
                            beginAtZero: true
                        }
                    }
                }
            });
        </script>
    }